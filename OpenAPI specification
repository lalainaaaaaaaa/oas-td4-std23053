openapi: 3.0.3
info:
  title: Library Management API
  version: 1.3.0  
  description: API for managing books, authors, and visitors in a library.
servers:
  - url: http://localhost:8080/api
components:
  parameters:
    queryPagination:
      name: page
      in: query
      description: The page number to retrieve (default is 1)
      required: false
      schema:
        type: integer
        default: 1

    pathPagination:
      name: pageSize
      in: query
      description: The number of items per page (default is 50)
      required: false
      schema:
        type: integer
        default: 50

    statusResponse:
      type: object
      properties:
        status:
          type: object
          properties:
            code:
              type: integer
            message:
              type: string
        body:
          type: object

    errorResponse:
      allOf:
        - $ref: '#/components/schemas/statusResponse'
        - properties:
            body:
              type: object
              additionalProperties: true

    successResponse200:
      allOf:
        - $ref: '#/components/schemas/statusResponse'
        - properties:
            body:
              type: object
              additionalProperties: true

    visitorIdParam:
      name: visitorId
      in: path
      required: true
      description: ID of the visitor.
      schema:
        type: string

    bookIdParam:
      name: bookId
      in: path
      required: true
      description: ID of the book.
      schema:
        type: string

    borrowBookRequestBody:
      type: object
      properties:
        visitorId:
          type: string 
        bookId:
          type: string 
paths:
  /visitors:
    get:
      summary: Retrieve a list of visitors with pagination
      parameters:
        - $ref: '#/components/parameters/queryPagination'
        - $ref: '#/components/parameters/pathPagination'
      responses:
        '200':
          description: A list of visitors retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/successResponse200'

    post:
      summary: Create a new visitor
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object 
              properties:
                name:
                  type:string 
                reference :
                  type:string 
      responses:
        '201':
          description: Visitor created successfully.
  /books/{bookId}/borrow:
    post:
      summary: Borrow a book for a visitor by IDs
      parameters:
        - $ref: '#/components/parameters/bookIdParam'
        - $ref: '#/components/parameters/borrowBookRequestBody'
      responses:
        '200':
          description: Book borrowed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/successResponse200'

  /books/{bookId}/return:
    post:
      summary: Return a borrowed book by its ID
      parameters:
        - $ref: '#/components/parameters/bookIdParam'
      responses:
        '200':
          description: Book returned successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/successResponse200'

  /books/status/{bookId}:
    get:
      summary: Check the availability status of a book by its ID
      parameters:
        - $ref: '#/components/parameters/bookIdParam'
      responses:
        '200':
          description: Status of the book retrieved successfully.
          content:
            application/json:
              schema:
                type: object 
                properties :
                  available :
                    type : boolean 
  /visitors/{visitorId}/activities:

    get :
       summary : Retrieve borrowing and returning activities of a visitor within a specified period.
       parameters :
         - $ref : '#/components/parameters/visitorIdParam'
         - name : startDate 
           in : query 
           required : false 
           schema :
             type : string 
             format : date 

         - name : endDate 
           in : query 
           required : false 
           schema :
             type : string 
             format : date 

       responses :
         '200':
           description : Activities retrieved successfully.
           content :
             application/json :
               schema :
                 type : array 
                 items :
                   type : object 
                   properties :
                     bookId :
                       type : string 
                     action :
                       type : string 
                     date :
                       type : string 
                       format : date-time 
securitySchemes:

  OAuth2:

    type : oauth2 

    flows :

       authorizationCode :

         authorizationUrl : 'https://example.com/oauth2/auth' 

         tokenUrl : 'https://example.com/oauth2/token' 

         scopes :

           readBooks : 'Read access to books' 

           borrowBooks : 'Borrow books' 

           manageBooks : 'Add or manage books' 


